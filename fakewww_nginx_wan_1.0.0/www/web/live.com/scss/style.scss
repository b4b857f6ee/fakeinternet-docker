/**
 *  Helper Functions
 */
@function config ($collection, $target) {
  @return map-get($collection, $target);
}

/**
 *  Configs
 */
$colors: (
  primary-bg     : #3391FF,
  secondary-bg   : #2D79FE,
  card-header-bg : white,
  card-body-bg   : #F9FBFB,
  text-default   : hsl(0,0%,33%),
  text-muted     : #777,
  valid          : #2ecc71,
  invalid        : #e74c3c,
  warning        : #f1c40f,
  checkbox-bg    : silver
);

$sizes: (
  baseline    : 1.618rem,
  tiny        : .68rem,
  small       : 1.206rem,
  medium      : 1.412rem,
  large       : 2.2rem,
  huge        : 2.6rem
);


/**
 *  General Styles
 */
html,
body { width: 100%; height: 100%; overflow: hidden; }

body {
  background-image: linear-gradient(180deg, config($colors, primary-bg), config($colors, secondary-bg));
  background-attachment: fixed;
}

a {
  color: config($colors, primary-bg);
  text-decoration: none;
}

/**
 *  Card Component
 */
.c-card {
  width: 32rem;
  margin: 7rem auto;
  font-family: "Roboto", sans-serif;
  color: config($colors, text-default);
  background-color: config($colors, card-body-bg);
  border-radius: .6rem;
  
  .c-card__header {
    padding: 2.8rem;
    border-radius: .6rem .6rem 0 0;
    background-color: config($colors, card-header-bg);
    box-shadow: 
      0 1px 0 0 hsla(0,0%,0%,.05),
      0 5px 15px 0 hsla(0,0%,0%,.10);
    z-index: 10;
  }
  
  .c-card__feedback {
    margin-top: -34px;
    padding: 10px;
    color: white;
    font-weight: 700;
    font-size: config($sizes, small);
    transition: margin-top .28s ease-in-out;
    will-change: margin-top;
    
    &.is--valid { background-color: config($colors, valid); }
    &.is--invalid { background-color: config($colors, invalid); }
    &.is--warning { background-color: config($colors, warning); }
    
    &.is--in { margin-top: 0px; }
  }
  
  .c-card__body {
    padding: 2.8rem;
  }
  
  .c-card__title {
    font-size: config($sizes, large);
    font-weight: 700;
    
    /**
     * Optionally, if the card title contains a
     * subtitle, add it above the title.
     */
    &.has--subtitle-above:before {
      content: attr(data-subtitle);
      display: block;
      margin-bottom: .5rem;
      text-transform: uppercase;
      font-size: config($sizes, small);
    }
  }
  
  /**
   * States
   */
  &.is--signing-in {
    overflow: hidden;
    .c-card__body {
      will-change: padding, height;
      animation: collapse .32s ease forwards;
      @keyframes collapse {
        50% {
          padding-top: 3.5rem;
        }
        100% {
          height: 0;
          padding-top: 0;
          padding-bottom: 0;
        }
      }
    }
  }
}


/**
 *  Form Component
 */
.c-form {
  user-select: none;
  
  .c-form__group {
    
    /**
     * Add some spacing between any following
     * groups of form fields, allowing more
     * breathing space that aids reading.
     */
    & ~ .c-form__group {
      margin-top: 3rem;
    }
  }
  
  .c-form__label {
    display: block;
    font-size: config($sizes, medium);
    font-weight: 700;
    cursor: pointer;
  }
  
  .c-form__hint {
    margin-top: config($sizes, tiny);
    font-size: config($sizes, small);
    font-weight: 400;
    color: config($colors, text-muted);
  }
  
  .c-form__field {
    display: block;
    width: 100%;
    background-color: hsl(0,0%,100%);
    padding: config($sizes, small);
    font-size: config($sizes, medium);
    margin: config($sizes, tiny) 0;
    border: 1px solid gainsboro;
    border-radius: config($sizes, tiny);
    transition: background-color .28s ease-in-out;
    will-change: background-color;
    
    /**
     * We also need to handle the many
     * different field states and
     * provide appropritate user
     * feedback.
     */
    &:hover {
      background-color: hsl(0,0%,98%);
    }
    
    &:focus { 
      outline: none;
      background-color: white;
    }
    
    &.has--feedback.is--invalid {
      border-bottom-left-radius: 0px;     
    }
    
    &.has--feedback.has--feedback-cube + .c-feedback-cube:before {
      opacity: 1;
    }
    
    /**
     * If the field has a feedback cube
     * we also need to accomodate for
     * that situation.
     */
    &.has--feedback-cube {
      padding-right: 5.5rem;
    
      & ~ .c-feedback-cube {
        position: absolute;
        top: 0;
        right: 0;
        height: 100%;
        width: 0rem;
        max-height: 5rem;
        transition: width .28s ease;
        border-radius: 0 config($sizes, tiny) config($sizes, tiny) 0;
      }
      
      &:focus +.c-feedback-cube,
      &.is--invalid +.c-feedback-cube,
      &.is--valid +.c-feedback-cube {
        width: 4.5rem;
      }
      
      
      /**
       * All of the validation states also need
       * to be handled.
       */
       &.is--invalid ~ .c-feedback-cube {
         background-color: config($colors, invalid);
       }
       &.is--valid ~ .c-feedback-cube {
         background-color: config($colors, valid);
         &:before {
           content: "⌒ ⌒";
           letter-spacing: 1px;
           line-height: 2;
         }
       }
       &.is--warning ~ .c-feedback-cube {
         background-color: config($colors, warning);
       }      
      
    }  
  
  }
  
  .c-form__checkbox {
   z-index: 10;
   margin: config($sizes, tiny) 0;
   display: none;
    
    & + .c-form__checkbox-text {
      left: 2px;
      bottom: 2px;
      font-size: config($sizes, small);
      
      &:before {
        content: "";
        display: inline-block;
        width: 15px;
        height: 15px;
        margin-right: 5px;
        top: 3px;
        border-radius: 3px;
        background-color: ghostwhite;
        border: 1px solid silver;
        box-shadow: 
          inset 0 0 0 2px ghostwhite, 
          inset 0 0 0 0 silver;        
        transition: box-shadow .14s ease-in-out;
      }
    }
    
    &:checked + .c-form__checkbox-text:before {
      box-shadow: 
        inset 0 0 0 2px ghostwhite, 
        inset 0 0 0 8px silver;
    }
    
  }
  
  .c-form__submit {
    padding: 1rem 1.5rem;
    cursor: pointer;
    border: 0;
    border-radius: config($sizes, tiny);
    background: linear-gradient(config($colors, valid),darken(config($colors, valid),5%));
    transition: 
      box-shadow .28s ease-in-out,
      background .28s ease-in-out,
      text-shadow .28s ease-in-out;
    box-shadow:
      inset 0 1px 0 0 hsla(0,100%,100%,.33), 
      0 1px 1px hsla(0,0%,0%,.16);
    color: white;
    font-weight: 500;
    border: 1px solid darken(config($colors, valid),8%);
    text-shadow: 0 2px 0 hsla(0,0%,0%,.16);
    
    &[disabled] {
      cursor: not-allowed;
      opacity: .5;
      background: gainsboro;
      border: 0;
      color: #444;
      text-shadow: none;
      box-shadow:
        inset 0 0 0 0 hsla(0,100%,100%,.33), 
        0 0 0 hsla(0,0%,0%,.16);
    }
    
    &:active,
    &:focus {
      outline: none;
    }
    
  }
}

/**
 * Feedback Cube Component
 */
.c-feedback-cube {
  margin: 0;
  padding: 0;
  width: 5rem;
  height: 5rem;
  text-align: center;
  background-color: #ebebeb;
  background-position: 50px 0;
  background-repeat: no-repeat;
  
  /* Add some eyes */
  &:before {
    content: "● ●";
    color: hsl(0, 100%, 100%);
    top: 6px;
    font-size: 15px;
    transform: scale(.8,1.5);
    display: block;
    letter-spacing: 3px;
    opacity: 0;
    transition: opacity .28s ease;
  }
  
  & + .c-feedback-cube__feedback {
    & > .c-feedback-cube__feedback__item {
      top: -8px;
      left: 0;
      right: 0;
      padding: 10px;
      margin-bottom: .5rem;
      font-weight: 500;
      font-size: config($sizes, small);      
      border-radius: 0 0 6px 6px;
      cursor: default;
      border: 1px solid hsl(0, 0%, 86%);
      
    /* The small speech indicator */
    &:after {
      content: "▴";
      width: 10px;
      height: 10px;
      color: hsl(0, 100%, 100%);
      position: absolute;
      top: -25px;
      right: 23px;
      font-size: 35px;
      transform: scale(1.5,1);
    }      
      
      &.is--invalid {
        color: config($colors, invalid);
        background-color: white;
      }      
      
    }
    
  }
  
  &.show--bruce {
    background-image: url('https://lh3.googleusercontent.com/-oAgBTzgFPqk/AAAAAAAAAAI/AAAAAAAAABQ/PIjU1TTwJ5U/s46-c-k-no/photo.jpg') !important; // bad code, bad!
    animation: slide-in .28s ease forwards;
  
    &:before { display: none; }
  }
}

@keyframes slide-in {
  to { background-position: 0px 0px; }
}

.is--hidden { display: none !important; }
.is--unclickable { pointer-events: none; }
.input-hint {
  position: absolute;
  bottom: -45px;
  padding: 0 6px;
  font-size: 1.412rem;
  line-height: 1.5;
  color: white;
}
